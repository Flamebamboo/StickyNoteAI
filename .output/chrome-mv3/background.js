var background=function(){"use strict";var a,c;function l(t){return t==null||typeof t=="function"?{main:t}:t}const e=(c=(a=globalThis.browser)==null?void 0:a.runtime)!=null&&c.id?globalThis.browser:globalThis.chrome,u=l(()=>{console.log("StickyNoteAI: Background script loaded"),e.runtime.onInstalled.addListener(t=>{t.reason==="install"&&(console.log("StickyNoteAI: Extension installed"),e.storage.local.set({"sticky-settings":{stealthMode:!1,autoHide:!1,opacity:.95,widgetPosition:{x:20,y:20}},"sticky-notes":[]}),e.tabs.create({url:"https://github.com/Flamebamboo/StickyNoteAI"}))}),e.commands.onCommand.addListener(t=>{console.log("Command received:",t),e.tabs.query({active:!0,currentWindow:!0},s=>{const o=s[0];o&&o.id&&e.tabs.sendMessage(o.id,{action:t,timestamp:Date.now()}).catch(n=>{console.log("Could not send message to content script:",n)})})}),e.runtime.onMessage.addListener((t,s,o)=>{switch(console.log("Background received message:",t),t.action){case"save-notes":e.storage.local.set({"sticky-notes":t.notes}),o({success:!0});break;case"load-notes":return e.storage.local.get(["sticky-notes"],n=>{o({notes:n["sticky-notes"]||[]})}),!0;case"save-settings":e.storage.local.set({"sticky-settings":t.settings}),o({success:!0});break;case"load-settings":return e.storage.local.get(["sticky-settings"],n=>{o({settings:n["sticky-settings"]||{stealthMode:!1,autoHide:!1,opacity:.95,widgetPosition:{x:20,y:20}}})}),!0;case"get-tab-info":s.tab&&o({tabId:s.tab.id,url:s.tab.url,title:s.tab.title});break;default:console.log("Unknown action:",t.action)}}),e.tabs.onUpdated.addListener((t,s,o)=>{if(s.status==="complete"&&o.url){if(o.url.startsWith("chrome://")||o.url.startsWith("chrome-extension://"))return;console.log("Tab updated:",o.url)}}),e.contextMenus.create({id:"create-note",title:"Create Sticky Note",contexts:["selection","page"]}),e.contextMenus.onClicked.addListener((t,s)=>{t.menuItemId==="create-note"&&s&&s.id&&e.tabs.sendMessage(s.id,{action:"create-note-with-selection",selectedText:t.selectionText||"",timestamp:Date.now()})})});function b(){}function i(t,...s){}const d={debug:(...t)=>i(console.debug,...t),log:(...t)=>i(console.log,...t),warn:(...t)=>i(console.warn,...t),error:(...t)=>i(console.error,...t)};let r;try{r=u.main(),r instanceof Promise&&console.warn("The background's main() function return a promise, but it must be synchronous")}catch(t){throw d.error("The background crashed on startup!"),t}return r}();
background;
